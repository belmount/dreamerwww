- need_drag ||= false

:javascript
  $(document).ready(function(){
    var raw_markers    = #{raw @json.to_json};
    var gmaps_markers;
    var init_func;

      function createSidebarLi(agency_json, last_flag) {
        if(last_flag) {
          return ("<li><a><span class='glyphicon glyphicon-flag'></span>" + agency_json.marker_title + "<\/a></li>");
        } else {
          return ("<li><a>" + agency_json.marker_title + "<\/a></li>");
        }
      };

      function bindLiToMarker($li, marker){
        $li.click(function(){
          marker.panTo(); //to pan to the marker
          google.maps.event.trigger(marker.getServiceObject(), "click"); // to open infowindow
        });
      };

      function createSidebar(){
        for (var i=0;i<raw_markers.length;i++){
          var $li = $( createSidebarLi(raw_markers[i], false) );
          $li.appendTo($('#markers_list'));
          bindLiToMarker($li, gmaps_markers[i]);
        }
      };

      handler = Gmaps.build('Google');

      if (#{need_drag}) {
        function enableDrag() {
          if (#{not params[:from_lat].present?}) {
            pos_marker = gmaps_markers[0].serviceObject;
            google.maps.event.addListener(pos_marker, 'dragend', function() {
              $('#from_lat').val(pos_marker.position.lat());
              $('#from_lng').val(pos_marker.position.lng());
            });
          }
        }
        init_func = function(){
          if (#{params[:from_lat].present?}) {
            gmaps_markers = handler.addMarkers(raw_markers);
          } else {
            gmaps_markers = handler.addMarkers(raw_markers, {draggable: true});
          }
          handler.bounds.extendWith(gmaps_markers);
          gmaps_markers[0].panTo();
          createSidebar();
          enableDrag();
        }
      } else {
        init_func = function(){
          gmaps_markers = handler.addMarkers(raw_markers);
          handler.bounds.extendWith(gmaps_markers);
          handler.fitMapToBounds();
          createSidebar();
        }
      }


      handler.buildMap(
          {provider: {zoom: 15}, 
          internal: {id: 'map'}}, 
          init_func
      );
  });
