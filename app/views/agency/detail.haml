%link(rel="stylesheet" type="text/css" href="/scripts/amazon/amazon_style/css/amazon_scroller.css")

%h1{class: "#{'text-danger' if @agency.in_complain?}"}
  %strong= @agency.bname
  %sub 
    备案信息
%p
  %small=@agency.address
-if @agency.in_complain? then
  %h4.text-danger.text-left
    %strong=icon 'exclamation-sign', "存在重大投诉#{@agency['complain_cnt']}笔未处理"
%hr
= render 'awards'
    
.row
  = render 'agency/detail/slide'
.row
  =render 'agency/detail/reginfo'

-if @award_brokers.count > 0 then  
  %section#award_brokers
    .page-header 获奖经纪人
    - @award_brokers.each do |b|
      %p
        %strong=b.name
        %span.label.label-success=b.awards

%hr
=render 'map', title: '附近已备案经纪机构'
      

#brokers.row
.page-header
  %h2= "备案经纪人信息(共#{@agency.brokers.count}人)"

%table.table.table-striped.table-bordered
  %thead
    %tr
      %th #
      %th 姓名
      %th 类型
      %th 资格证书号码
      %th 
  %tbody
  -  @agency.brokers.asc('type').each_with_index do |broker, i|
    %tr
      %td= i+1
      %td= "#{broker.name}#{ add_star(broker)}".html_safe
      %td= broker.type
      %td= broker.cert_num
      %td
        %strong.view_img{"data-html" => "true","data-content"=>"<img src=\"#{Broker.img_url(broker.guid)}\">".html_safe} 
          查看照片
- content_for :footer do
  %script{:src => "/scripts/amazon/amazon_style/js/amazon_scroller.js", :type => "text/javascript"}
  -#%script{:src => "/scripts/fancybox/fancybox/jquery.fancybox-1.3.4.pack.js", :type => "text/javascript"}
  :javascript
    $(document).ready(function(){
      $('.view_img').popover();
      var raw_markers    = #{raw @json.to_json};
      var gmaps_markers;

        function createSidebarLi(agency_json, last_flag) {
          if(last_flag) {
            return ("<li><a><span class='glyphicon glyphicon-flag'></span>" + agency_json.marker_title + "<\/a></li>");
          } else {
            return ("<li><a>" + agency_json.marker_title + "<\/a></li>");
          }
        };

        function bindLiToMarker($li, marker){
          $li.click(function(){
            marker.panTo(); //to pan to the marker
            google.maps.event.trigger(marker.getServiceObject(), "click"); // to open infowindow
          });
        };

        function createSidebar(){
          for (var i=0;i<raw_markers.length;i++){
            var last_flag = i === (raw_markers.length -1);
            var $li = $( createSidebarLi(raw_markers[i], last_flag) );
            $li.appendTo($('#markers_list'));
            bindLiToMarker($li, gmaps_markers[i]);
          }
        };

        handler = Gmaps.build('Google');
        handler.buildMap({ 
            provider: {zoom: 3}, 
            internal: {id: 'map'}}, 
            function(){
            gmaps_markers = handler.addMarkers(raw_markers);
            handler.bounds.extendWith(gmaps_markers);
            handler.fitMapToBounds();
            createSidebar();
        });
    });

